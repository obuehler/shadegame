#include "Runner.h"
#include <iostream>

void Runner::run() {
	MovingObject obj;
	cout << obj._actionQueue->isEmpty() << endl;
	obj._actionQueue->push('1');
	ActionQueue* queue = obj._actionQueue;
	queue->printContents();
	queue->push('2');
	queue->printContents();
	queue->push('3');
	queue->setCycling(true);
	queue->printContents();
	queue->next();
	queue->printContents();
	ActionQueue queue2(Node('4'));
	queue2.push('5');
	queue2.push('6');
	queue->concat(queue2);
	queue->printContents();
	ActionQueue queue3(Node('7'));
	queue3.push('8');
	queue->force(queue3, true);
	queue->printContents();
	ActionQueue queue4(Node('9'));
	queue4.push('0');
	queue->force(queue4, true);
	queue->printContents();
	ActionQueue queue5(Node('a'));
	queue5.push('b');
	queue->force(queue5, false);
	queue->printContents();
	queue->next();
	queue->printContents();
	queue->next();
	queue->printContents();
	queue->next();
	queue->printContents();
	queue->next();
	queue->printContents();
	queue->next();
	queue->printContents();
	ActionQueue queue6(Node('e', 1));
	queue6.push('f', 2);
	queue6.push('g', 3);
	queue6.push('h', 2);
	queue6.setCycling(true);
	queue->force(queue6, false);
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
	obj.act();
	queue->printContents();
}